//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.7.0.0 (NJsonSchema v10.1.24.0 (Newtonsoft.Json v12.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace ToDoApp.Projects.ApiClient
{
    public interface IApiClient
    {
        Task<Client> ApiClientsDeleteAsync(int id);
        Task<Client> ApiClientsDeleteAsync(int id, CancellationToken cancellationToken);
        Task<ICollection<Client>> ApiClientsGetAsync();
        Task<ICollection<Client>> ApiClientsGetAsync(CancellationToken cancellationToken);
        Task<Client> ApiClientsGetAsync(int id);
        Task<Client> ApiClientsGetAsync(int id, CancellationToken cancellationToken);
        Task<Client> ApiClientsPostAsync(Client body);
        Task<Client> ApiClientsPostAsync(Client body, CancellationToken cancellationToken);
        Task<Project> ApiClientsProjectsDeleteAsync(int clientId, int projectId);
        Task<Project> ApiClientsProjectsDeleteAsync(int clientId, int projectId, CancellationToken cancellationToken);
        Task<ICollection<Project>> ApiClientsProjectsGetAsync(int clientId);
        Task<ICollection<Project>> ApiClientsProjectsGetAsync(int clientId, CancellationToken cancellationToken);
        Task<Project> ApiClientsProjectsPostAsync(int clientId, Project body);
        Task<Project> ApiClientsProjectsPostAsync(int clientId, Project body, CancellationToken cancellationToken);
        Task ApiClientsProjectsPutAsync(int clientId, int projectId, Project body);
        Task ApiClientsProjectsPutAsync(int clientId, int projectId, Project body, CancellationToken cancellationToken);
        Task ApiClientsPutAsync(int id, Client body);
        Task ApiClientsPutAsync(int id, Client body, CancellationToken cancellationToken);
        Task<Project> ApiProjectsDeleteAsync(int id);
        Task<Project> ApiProjectsDeleteAsync(int id, CancellationToken cancellationToken);
        Task<ICollection<Project>> ApiProjectsGetAsync();
        Task<ICollection<Project>> ApiProjectsGetAsync(CancellationToken cancellationToken);
        Task<Project> ApiProjectsGetAsync(int id);
        Task<Project> ApiProjectsGetAsync(int id, CancellationToken cancellationToken);
        Task<Project> ApiProjectsPostAsync(Project body);
        Task<Project> ApiProjectsPostAsync(Project body, CancellationToken cancellationToken);
        Task ApiProjectsPutAsync(int id, Project body);
        Task ApiProjectsPutAsync(int id, Project body, CancellationToken cancellationToken);
    }
}